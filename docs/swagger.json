{
    "swagger": "2.0",
    "info": {
        "description": "A Delayed notifier which plans noitfication and send on needed time.",
        "title": "Delayed Notifier API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Serve the main index.html page",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "main"
                ],
                "summary": "Get main page",
                "responses": {
                    "200": {
                        "description": "HTML page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notify": {
            "get": {
                "description": "Retrieve a list of all notifications",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Get all notifications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Komilov31_delayed-notifier_internal_model.Notification"
                            }
                        }
                    },
                    "500": {
                        "description": "Could not get notifications",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new delayed notification with text and send time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Create a new notification",
                "parameters": [
                    {
                        "description": "Notification payload",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_delayed-notifier_internal_dto.NotificationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_delayed-notifier_internal_model.Notification"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or time in the past",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    },
                    "500": {
                        "description": "Could not create notification",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    }
                }
            }
        },
        "/notify/{id}": {
            "get": {
                "description": "Retrieve the status of a notification by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Get notification status by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_delayed-notifier_internal_dto.NotificationStatus"
                        }
                    },
                    "400": {
                        "description": "Invalid ID or notification not found",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    },
                    "500": {
                        "description": "Could not get notification status",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "Update the status of a notification to \"canceled\" by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Cancel a notification by updating its status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification cancellation status",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    },
                    "400": {
                        "description": "Invalid ID or notification not found",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    },
                    "500": {
                        "description": "Could not update notification status",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ginext.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "github_com_Komilov31_delayed-notifier_internal_dto.NotificationDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "send_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "telegram_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "github_com_Komilov31_delayed-notifier_internal_dto.NotificationStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_Komilov31_delayed-notifier_internal_model.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "send_at": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "telegram_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}